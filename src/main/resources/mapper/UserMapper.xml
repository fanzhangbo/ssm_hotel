<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fzb.hotel.mapper.UserMapper">
    <!--根据用户名和密码查询用户-->
    <select id="findUserByUsernameAndPassword" resultType="com.fzb.hotel.entity.User">
        SELECT * FROM user WHERE username=#{username} AND password=#{password}
    </select>

    <!--查询所有用户-->
    <select id="listUser" resultType="com.fzb.hotel.entity.User">
        SELECT id,username,locked,gender FROM user
    </select>

    <!--根据搜索用户-->
    <select id="searchUser" parameterType="String" resultType="com.fzb.hotel.entity.User">
        SELECT id,username,locked,gender FROM user WHERE username LIKE CONCAT(CONCAT('%',#{username}),'%')
    </select>

    <!--根据用户id查询用户-->
    <select id="getUserById" parameterType="Long" resultType="com.fzb.hotel.entity.User">
        SELECT id,username,locked,gender FROM user WHERE id=#{id}
    </select>

    <!--根据角色id查询用户列表-->
    <select id="getUserListByRoleId" parameterType="Long" resultType="com.fzb.hotel.entity.User">
        select id,username,locked,gender from user_role WHERE role_id=#{roleId}
    </select>


    <!--添加-->
    <insert id="addUser" keyProperty="id" useGeneratedKeys="true" parameterType="com.fzb.hotel.entity.User">
        INSERT INTO user(username,password,gender,locked)
        VALUES (#{username}, #{password}, #{gender},#{locked})
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
    </insert>


    <!--编辑-->
    <update id="editUser" parameterType="com.fzb.hotel.entity.User">
        UPDATE user
        <set>
            <if test="username != null">username=#{username},</if>
            <if test="password != null">password=#{password},</if>
            <if test="gender != null">gender=#{gender},</if>
            <if test="locked != null">locked=#{locked}</if>
        </set>
        WHERE  id=#{id}
    </update>

    <delete id="deleteUser" parameterType="Long">
        DELETE FROM user WHERE id=#{id}
    </delete>

    <!--添加用户权限-->
    <insert id="addUserRole">
        INSERT INTO user_role(user_id,role_id) VALUES (#{userId},#{roleId})
    </insert>

    <!--删除用户下所有的角色-->
    <delete id="deleteUserRole" parameterType="Long">
        DELETE FROM user_role WHERE user_id=#{userId}
    </delete>





</mapper>

